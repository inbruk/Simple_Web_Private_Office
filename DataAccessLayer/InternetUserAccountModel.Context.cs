//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccessLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class InternetUserAccountEntities : DbContext
    {
        public InternetUserAccountEntities()
            : base("name=InternetUserAccountEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblAccount> tblAccount { get; set; }
        public virtual DbSet<tblService> tblService { get; set; }
        public virtual DbSet<tblServiceUsage> tblServiceUsage { get; set; }
        public virtual DbSet<tblUser> tblUser { get; set; }
        public virtual DbSet<tblUserType> tblUserType { get; set; }
        public virtual DbSet<vwServiceUsageService> vwServiceUsageService { get; set; }
        public virtual DbSet<vwUserAccountUserType> vwUserAccountUserType { get; set; }
    
        public virtual ObjectResult<prcServiceUsage_Result> prcServiceUsage(Nullable<int> userId, Nullable<bool> onlyUsersWithUsageNow)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var onlyUsersWithUsageNowParameter = onlyUsersWithUsageNow.HasValue ?
                new ObjectParameter("onlyUsersWithUsageNow", onlyUsersWithUsageNow) :
                new ObjectParameter("onlyUsersWithUsageNow", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcServiceUsage_Result>("prcServiceUsage", userIdParameter, onlyUsersWithUsageNowParameter);
        }
    
        public virtual ObjectResult<prcUserAccountServiceUsage_Result> prcUserAccountServiceUsage(Nullable<int> userType, Nullable<bool> onlyUsersWithUsageNow)
        {
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("userType", userType) :
                new ObjectParameter("userType", typeof(int));
    
            var onlyUsersWithUsageNowParameter = onlyUsersWithUsageNow.HasValue ?
                new ObjectParameter("onlyUsersWithUsageNow", onlyUsersWithUsageNow) :
                new ObjectParameter("onlyUsersWithUsageNow", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcUserAccountServiceUsage_Result>("prcUserAccountServiceUsage", userTypeParameter, onlyUsersWithUsageNowParameter);
        }
    }
}
